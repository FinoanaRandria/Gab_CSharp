<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5QZZn7wAAAAASUVORK5CYII=
</value>
  </data>
</root>